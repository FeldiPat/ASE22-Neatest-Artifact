const test0 = async function (t) {
  await t.runForSteps(1);
}
const test1 = async function (t) {
  t.keyPress('space', 6);
  await t.runForSteps(6);
  await t.runForSteps(1);
  await t.runForSteps(22);
  await t.runForSteps(21);
  t.keyPress('space', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.keyPress('space', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.keyPress('space', 5);
  await t.runForSteps(5);
  await t.runForSteps(1);
  t.mouseMove(-79, 52);
  await t.runForSteps(1);
  t.mouseMove(-79, 50);
  await t.runForSteps(1);
  t.mouseMove(-78, 48);
  await t.runForSteps(1);
  t.mouseMove(-78, 46);
  await t.runForSteps(1);
  t.mouseMove(-78, 44);
  await t.runForSteps(1);
  t.mouseMove(-78, 41);
  await t.runForSteps(1);
  t.mouseMove(-78, 41);
  await t.runForSteps(1);
  t.mouseMove(-78, 41);
  await t.runForSteps(1);
  await t.runForSteps(22);
  await t.runForSteps(22);
  t.keyPress('space', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.keyPress('space', 5);
  await t.runForSteps(5);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.keyPress('space', 5);
  await t.runForSteps(5);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.keyPress('space', 5);
  await t.runForSteps(5);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.keyPress('space', 5);
  await t.runForSteps(5);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.keyPress('space', 5);
  await t.runForSteps(5);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.keyPress('space', 6);
  await t.runForSteps(6);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.keyPress('space', 6);
  await t.runForSteps(6);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.keyPress('space', 6);
  await t.runForSteps(6);
  await t.runForSteps(1);
  t.mouseMove(-16, 93);
  await t.runForSteps(1);
  t.mouseMove(-16, 93);
  await t.runForSteps(1);
  t.mouseMove(-16, 93);
  await t.runForSteps(1);
  t.mouseMove(-16, 93);
  await t.runForSteps(1);
  t.mouseMove(-16, 93);
  await t.runForSteps(1);
  t.mouseMove(-16, 93);
  await t.runForSteps(1);
  t.mouseMove(-16, 93);
  await t.runForSteps(1);
  t.mouseMove(-16, 92);
  await t.runForSteps(1);
  t.mouseMove(-16, 92);
  await t.runForSteps(1);
  t.mouseMove(-17, 92);
  await t.runForSteps(1);
  t.mouseMove(-17, 92);
  await t.runForSteps(1);
  t.mouseMove(-17, 92);
  await t.runForSteps(1);
  t.mouseMove(-17, 92);
  await t.runForSteps(1);
  t.mouseMove(-17, 92);
  await t.runForSteps(1);
  t.mouseMove(-17, 91);
  await t.runForSteps(1);
  t.mouseMove(-18, 91);
  await t.runForSteps(1);
  t.mouseMove(-18, 91);
  await t.runForSteps(1);
  t.mouseMove(-18, 91);
  await t.runForSteps(1);
  t.mouseMove(-18, 90);
  await t.runForSteps(1);
  t.mouseMove(-18, 90);
  await t.runForSteps(1);
  t.mouseMove(-18, 90);
  await t.runForSteps(1);
  t.mouseMove(-18, 89);
  await t.runForSteps(1);
  t.mouseMove(-18, 89);
  await t.runForSteps(1);
  t.mouseMove(-18, 89);
  await t.runForSteps(1);
  t.mouseMove(-18, 88);
  await t.runForSteps(1);
  t.mouseMove(-18, 88);
  await t.runForSteps(1);
  t.mouseMove(-18, 88);
  await t.runForSteps(1);
  t.mouseMove(-18, 87);
  await t.runForSteps(1);
  t.mouseMove(-18, 87);
  await t.runForSteps(1);
  t.mouseMove(-18, 86);
  await t.runForSteps(1);
  t.mouseMove(-18, 86);
  await t.runForSteps(1);
  t.mouseMove(-18, 85);
  await t.runForSteps(1);
  t.mouseMove(-18, 85);
  await t.runForSteps(1);
  t.mouseMove(-18, 84);
  await t.runForSteps(1);
  t.mouseMove(-18, 83);
  await t.runForSteps(1);
  t.mouseMove(-17, 83);
  await t.runForSteps(1);
  t.mouseMove(-17, 82);
  await t.runForSteps(1);
  t.mouseMove(-17, 81);
  await t.runForSteps(1);
  t.mouseMove(-17, 81);
  await t.runForSteps(1);
  t.mouseMove(-16, 80);
  await t.runForSteps(1);
  t.mouseMove(-16, 79);
  await t.runForSteps(1);
  t.mouseMove(-16, 78);
  await t.runForSteps(1);
  t.mouseMove(-16, 77);
  await t.runForSteps(1);
  t.mouseMove(-15, 76);
  await t.runForSteps(1);
  t.mouseMove(-15, 75);
  await t.runForSteps(1);
  t.mouseMove(-15, 74);
  await t.runForSteps(1);
  t.mouseMove(-14, 73);
  await t.runForSteps(1);
  t.mouseMove(-14, 71);
  await t.runForSteps(1);
  t.mouseMove(-14, 70);
  await t.runForSteps(1);
  t.mouseMove(-13, 69);
  await t.runForSteps(1);
  t.mouseMove(-13, 67);
  await t.runForSteps(1);
  t.mouseMove(-13, 65);
  await t.runForSteps(1);
  t.mouseMove(-13, 64);
  await t.runForSteps(1);
  t.mouseMove(-12, 62);
  await t.runForSteps(1);
  t.mouseMove(-12, 60);
  await t.runForSteps(1);
  t.mouseMove(-12, 58);
  await t.runForSteps(1);
  t.mouseMove(-12, 55);
  await t.runForSteps(1);
  await t.runForSteps(22);
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      type: 'neuroevolution',
      configs: {"testSuiteType":"dynamic","timeout":10000,"eventSelection":"activation","seed":13,"durations":{"waitStepUpperBound":50,"pressDurationUpperBound":10,"soundDuration":10,"clickDuration":10}},
  },
  {
      test: test1,
      name: 'Generated Test',
      description: '',
      categories: [],
      type: 'neuroevolution',
      configs: {"testSuiteType":"dynamic","timeout":10000,"eventSelection":"activation","seed":13,"durations":{"waitStepUpperBound":50,"pressDurationUpperBound":10,"soundDuration":10,"clickDuration":10}},
  }
]
